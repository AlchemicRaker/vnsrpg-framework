#
# TXROM Layout (TKROM goal)
#
# Presumes PRG ROM Bank Mode 0 (second to last bank at $C000)
#
# ROM banks should be $NNSS
# NN - bank number, as written to MMC3DATA 
#       $00 to $3F for PRG
#       $00 to $1F for CHR
#      
# SS - select number, as written to MMC3SELECT 
#     CHR
#       $00 for $0000-$07FF (2KB)
#       $01 for $0800-$0FFF
#       $02 for $1000-$13FF (1KB)
#       $03 for $1400-$17FF
#       $04 for $1800-$1BFF
#       $05 for $1C00-$1FFF
#     PRG
#       $06 for $8000-$9FFF (8KB)
#       $07 for $A000-$BFFF
#
MEMORY {
  ZEROPAGEM:    start = $10, size = $ef, type = rw;
  RAMM:         start = $0300, size = $0500, type = rw;
  INES:         start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  PRG_RAMM:     start = $6000, size = $2000, type = rw;
  PRG_ROM0M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$00, bank=$0006;
  PRG_ROM1M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$01, bank=$0106;
  PRG_ROM2M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$02, bank=$0206;
  PRG_ROM3M:    start = $A000, size = $2000, type = ro, file = %O, fill=yes, fillval=$03, bank=$0307;
  PRG_STATICM:  start = $C000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;
  CHR_ROM0M:    start = $0000, size = $2000, type = ro, file = %O, fill=yes, fillval=$00, bank=$00;
}

SEGMENTS {
  TXROM:        load = INES, type = ro, align = $10;
  ZEROPAGE:     load = ZEROPAGEM, type = zp;
  RAM:          load = RAMM, type = bss;
  INITBANK:     load = PRG_ROM2M, type = ro;
  INITBANK2:    load = PRG_ROM3M, type = ro;
  STATICCODE:   load = PRG_STATICM, type = ro;
  MMC3_INIT:    load = PRG_STATICM, type = ro, start = $FFE0;
  VECTORS:      load = PRG_STATICM, type = ro, start = $FFFA;
  CHR0:         load = CHR_ROM0M, type = ro;
}

FILES {
  %O: format = bin;
}
