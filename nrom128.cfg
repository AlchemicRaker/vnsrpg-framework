#
# Linker script for NROM-128 games
# Copyright 2010-2014 Damian Yerrick
#
# Copying and distribution of this file, with or without
# modification, are permitted in any medium without royalty
# provided the copyright notice and this notice are preserved.
# This file is offered as-is, without any warranty.
#
MEMORY {
  ZEROPAGEM:    start = $10, size = $ef, type = rw;
  RAMM:         start = $0300, size = $0500, type = rw;
  INES:         start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  PRG_RAMM:     start = $6000, size = $2000, type = rw;
  PRG_ROM0M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$00, bank=$0006;
  PRG_ROM1M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$01, bank=$0106;
  PRG_ROM2M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$02, bank=$0206;
  PRG_ROM3M:    start = $8000, size = $2000, type = ro, file = %O, fill=yes, fillval=$03, bank=$0306;
  PRG_STATICM:  start = $C000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;
  CHR_ROM0M:    start = $0000, size = $2000, type = ro, file = %O, fill=yes, fillval=$00, bank=$00;
}

SEGMENTS {
  NROM:         load = INES, type = ro, align = $10;
  ZEROPAGE:     load = ZEROPAGEM, type = zp;
  RAM:          load = RAMM, type = bss;
  INITBANK:     load = PRG_ROM2M, type = ro;
  # INITBANK2:    load = PRG_ROM3M, type = ro;
  STATICCODE:   load = PRG_STATICM, type = ro;
  MMC3_INIT:    load = PRG_STATICM, type = ro, start = $FFE0;
  VECTORS:      load = PRG_STATICM, type = ro, start = $FFFA;
  CHR0:         load = CHR_ROM0M, type = ro;
}

FILES {
  %O: format = bin;
}
